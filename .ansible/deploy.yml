- name: DÃ©ploiement complet de Bmarket
  hosts: bmarket
  become: true
  vars:
    ghcr_username: "{{ ghcr_username }}"
    ghcr_token: "{{ ghcr_token }}"
    domain_name: "{{ domain_name }}"
    database_url: "{{ database_url }}"

  tasks:

    - name: ğŸ“¦ Installer les dÃ©pendances
      apt:
        name:
          - docker.io
          - docker-compose
          - nginx
          - certbot
          - python3-certbot-nginx
          - ufw
          - fail2ban
        state: present
        update_cache: true

    - name: ğŸ”‘ Se connecter Ã  GHCR
      shell: echo "{{ ghcr_token }}" | docker login ghcr.io -u "{{ ghcr_username }}" --password-stdin

    - name: ğŸ“¦ TÃ©lÃ©charger la derniÃ¨re image Docker
      shell: docker pull ghcr.io/{{ ghcr_username }}/bmarket:latest

    - name: ğŸ›‘ ArrÃªter et supprimer l'ancien conteneur (si existant)
      shell: docker rm -f bmarket || true

    - name: ğŸš€ DÃ©marrer le conteneur
      shell: |
        docker run -d --name bmarket \
          -p 3000:3000 \
          -e DATABASE_URL="{{ database_url }}" \
          ghcr.io/{{ ghcr_username }}/bmarket:latest

    - name: ğŸ”„ Configurer Nginx pour Bmarket
      copy:
        dest: "/etc/nginx/sites-available/bmarket"
        content: |
          server {
              listen 80;
              server_name {{ domain_name }} www.{{ domain_name }};

              location / {
                  proxy_pass http://localhost:3000;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }
          }

    - name: ğŸ”— Activer la configuration Nginx
      file:
        src: "/etc/nginx/sites-available/bmarket"
        dest: "/etc/nginx/sites-enabled/bmarket"
        state: link

    - name: ğŸ§¹ Supprimer la configuration par dÃ©faut
      file:
        path: "/etc/nginx/sites-enabled/default"
        state: absent

    - name: ğŸ”„ RedÃ©marrer Nginx
      systemd:
        name: nginx
        state: restarted
        enabled: true

    - name: ğŸ”’ GÃ©nÃ©rer un certificat SSL avec Certbot
      shell: certbot --nginx -d {{ domain_name }} -d www.{{ domain_name }} --non-interactive --agree-tos -m contact@{{ domain_name }}

    - name: ğŸ”„ RedÃ©marrer Nginx aprÃ¨s Certbot
      systemd:
        name: nginx
        state: restarted
